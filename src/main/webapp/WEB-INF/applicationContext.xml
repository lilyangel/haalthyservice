<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	 xmlns:p="http://www.springframework.org/schema/p"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:jdbc="http://www.springframework.org/schema/jdbc"
     xmlns:context="http://www.springframework.org/schema/context"
     xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

   <!-- in-memory database and a datasource -->
 	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
 		<property name="url"
			value="jdbc:mysql://lilymysql.cjxzgcls0rkx.rds.cn-north-1.amazonaws.com.cn:3306/haalthy?useUnicode=true&amp;characterEncoding=utf8">
		</property>
<!--		<property name="url"
			value="jdbc:mysql://lilymysql.cjxzgcls0rkx.rds.cn-north-1.amazonaws.com.cn:3306/haalthy?useUnicode=true&amp;characterEncoding=utf8">
		</property>-->
<!-- 		<property name="username" value="lily"></property>
		<property name="password" value="%TGB3edc"></property>  -->
		<property name="username" value="lily"></property>
		<property name="password" value="%TGB3edc"></property>
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver">
		</property>
	</bean>
<!--     <property name="url"
              value="jdbc:mysql://rdsh7cvdrpvk635j2d2g.mysql.rds.aliyuncs.com:3306/haalthy?useUnicode=true&amp;characterEncoding=utf8&amp;allowMultiQueries=true&amp;zeroDateTimeBehavior=convertToNull">
    </property> -->
<!--     		<property name="username" value="lily"></property>
            <property name="password" value="%TGB3edc"></property> 
    <property name="username" value="lily"></property>
    <property name="password" value="%TGB3edc"></property> -->

<!--     <property name="username" value="haalthy"></property>
    <property name="password" value="183200a"></property> -->
<!--     <property name="driverClassName"
              value="com.mysql.jdbc.Driver">
    </property>


    </bean> -->

    <!-- transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- enable component scanning (beware that this does not enable mapper scanning!) -->    
    <context:component-scan base-package="com.haalthy.service" />

    <!-- enable autowire -->
    <context:annotation-config />

    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven />

    <!-- define the SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="com.haalthy.service.domain" />

        <!-- 配置sqlSessionFactory的参数 -->
        <property name="configurationProperties">
            <props>
                <prop key="cacheEnabled">true</prop>
                <!-- 查询时，关闭关联对象即时加载以提高性能  -->
                <prop key="lazyLoadingEnabled">false</prop>
                <!-- 设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指定)，不会加载关联表的所有字段，以提高性能 -->
                <prop key="aggressiveLazyLoading">true</prop>
                <!-- 对于未知的SQL查询，允许返回不同的结果集以达到通用的效果  -->
                <prop key="multipleResultSetsEnabled">true</prop>
                <!-- 允许使用列标签代替列名 -->
                <prop key="useColumnLabel">true</prop>
                <!-- 允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖 -->
                <prop key="useGeneratedKeys">true</prop>
                <!-- 给予被嵌套的resultMap以字段-属性的映射支持     -->
                <prop key="autoMappingBehavior">FULL</prop>
                <!-- 对于批量更新操作缓存SQL以提高性能      -->
                <prop key="defaultExecutorType">BATCH</prop>
                <!-- 数据库超过25000秒仍未响应则超时     -->
                <prop key="defaultStatementTimeout">25000</prop>
                <prop key="logImpl">LOG4J</prop>
                <prop key="mapUnderscoreToCamelCase">true</prop>
                <prop key="defaultExecutorType">REUSE</prop>
                <prop key="callSettersOnNulls">true</prop>

            </props>
        </property>
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.haalthy.service.persistence" />
    </bean>
    <bean id="tagService" class="com.haalthy.service.openservice.TagService">
    </bean>
    <bean id="postService" class="com.haalthy.service.openservice.PostService">
    </bean>
     <bean id="commentService" class="com.haalthy.service.openservice.CommentService">
    </bean>
    <bean id="followService" class="com.haalthy.service.openservice.FollowService">
    </bean>
    <bean id="patientService" class="com.haalthy.service.openservice.PatientService">
    </bean>
    <bean id="clinicTrailService" class="com.haalthy.service.openservice.ClinicTrailService">
    </bean>
    <bean id="ossService" class="com.haalthy.service.openservice.OssService">
    </bean>
    <bean id="redisCache" class="com.haalthy.service.cache.RedisCache">

    </bean>
    <bean id="userService" class="com.haalthy.service.openservice.UserService">
    </bean>
    
    <import resource="applicationContext-redis.xml"/>
</beans>
